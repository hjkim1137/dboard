<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Myboard</title>
    <link href="/main.css" rel="stylesheet" />
  </head>
  <body class="grey-bg">
    <%- include('nav.ejs')%>

    <!-- 검색기능 -->
    <div class="searchBox">
      <input class="search" placeholder="게시글을 검색하세요." />
      <button class="searchBtn">검색하기</button>
    </div>

    <script>
      document
        .querySelector('.searchBtn')
        .addEventListener('click', function () {
          let userInput = document.querySelector('.search').value;
          location.href = '/search?keyword=' + userInput;
          // 이것과 동일한 기능: fetch('/search?keyword=' + userInput);
        });
    </script>

    <div class="white-bg">
      <% if(글목록.length >0) { %> <% for(let i=0; i<글목록.length;i++) { %>
      <div class="list-box">
        <h4>
          <a href="/detail/<%=글목록[i]._id%>"><%=글목록[i].title %></a>
          <a href="/edit/<%=글목록[i]._id %>">✏️ 수정</a>
          <span
            class="deletePost"
            data-postid="<%=글목록[i]._id %>"
            data-userid="<%=글목록[i].user%>"
          >
            🗑️ 삭제
          </span>
        </h4>
        <p><%=글목록[i].content %></p>
      </div>
      <% } %>

      <!-- 삭제기능(보류중) -->
      <!-- 작성자 일때만 삭제 버튼 보이게(현재 오류 있음) -->
      <script>
        let deleteBtns = document.querySelectorAll('.deletePost');

        // 클릭하기 전에 작성자와 로그인한 유저 다르면 삭제버튼 안보이게 처리(보류)
        deleteBtns.forEach((btn) => {
          btn.addEventListener('click', function (e) {
            let postId = e.target.dataset.postid;
            let writer = e.target.dataset.userid;
            let loginUser = '<%= loginUser%>';
            if (loginUser !== writer) {
              btn.style.display = 'none';
            }

            if (loginUser === writer) {
              if (window.confirm('삭제하시겠습니까?')) {
                // 자바스크립트 변수 넣고 싶으면 '+' 사용하여 합치기
                fetch('/delete?docId=' + postId, {
                  method: 'DELETE',
                })
                  // ajax 성공 시 서버에서 온 응답 콘솔에 출력하는 방법(오류중)
                  .then((res) => res.text())
                  .then((data) => {
                    e.target.parentElement.parentElement.style.display = 'none';
                  })
                  .catch((error) => {
                    console.error('오류 발생!!', error);
                    e.target.parentElement.parentElement.style.display =
                      'block';
                  });
              } else {
                btn.style.display = 'block';
              }
            }
          });
        });
      </script>

      <% } %>
      <!-- 왜인지 if-else가 안되어 if, if 사용 -->
      <% if(글목록.length == 0) { %>
      <div class="toWritePage">
        <a href="/write">생성된 글이 없습니다. 첫 글을 발행해보세요!</a>
      </div>
      <% } %>
    </div>

    <!-- 페이지네이션 만들기-->
    <div class="pages">
      <a href="/list/1" id="page">1</a>
      <a href="/list/2" id="page">2</a>
      <a href="/list/3" id="page">3</a>
      <a href="/list/4" id="page">4</a>
    </div>

    <!-- 다음 버튼 만들기-->
    <!-- 예를 들어 list/1 페이지로 들어갔을 때, 총 글 목록은 5개고, 
      마지막 글의 id가 파라미터로 넘어가게 됨 -->

    <!--먼저 글목록 여부 체크 -->
    <% if(글목록.length >0) { %>
    <div class="nextBtn">
      <a href="/list/next/<%=글목록[글목록.length-1]._id %>" class="nextBtn"
        >다음</a
      >
    </div>
    <% } %>

    <!-- SSE 구현하기 -->
    <!-- 남이 글을 올리면 새로고침 안해도 실시간으로 글을 받아볼 수 있음 -->
    <script>
      let eventSource = new EventSource('/stream/list'); // get 요청보냄
      eventSource.addEventListener('msg', function (e) {
        // 서버에서 msg명으로 이벤트 보낼 때마다 이 안의 코드가 실행됨
        console.log(e.data);
        let mydata = JSON.parse(e.data); // json을 array/object 형식으로 바꿔줌
        document
          .querySelector('.white-bg')
          .insertAdjacentHTML(
            'afterbegin',
            `<div class="list-box"><h4>${mydata.title}<h4></div>`
          );
      });
    </script>
  </body>
</html>

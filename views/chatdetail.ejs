<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link href="/main.css" rel="stylesheet" />
  </head>
  <body class="grey-bg">
    <%- include('nav.ejs')%>

    <div class="detail-bg">
      <div class="chat-screen">
        <% if(chats && chats.length > 0) { %>
          <% for(let i=0; i<chats.length; i++) { %>
            <div class="chat-box"><span><%=chats[i].chats %></span></div>
            <% } %>
        <% } %>
      </div>
    </div>

    <div class="chat-form">
      <input class="chat-input" />
      <button class="chat-button">전송</button>
    </div>

    <!-- 소켓 io 세팅 -->
    <script src="https://cdn.jsdelivr.net/npm/socket.io@4.7.2/client-dist/socket.io.min.js"></script>
    <script>
      // 유저의 웹소켓 연결코드
      const socket = io();

      // 현재 접속되어 있는 서버로 메시지를 송신
      // 형식: socket.emit("event_name", msg);

      document
        .querySelector('.chat-button')
        .addEventListener('click', function () {
          // 유저가 전송한 값 보내기
          let userInput = document.querySelector('.chat-input').value;
          socket.emit('message-send', {
            msg: userInput,
            roomId: "<%= chats.roomId %>",
            date: new Date(),
          });
        });

      // 현재 접속되어 있는 서버로부터의 메시지를 수신
      // 형식
      // socket.on("event_name", function(data) {
        // console.log('Message from Server: ' + data);
      // });
      
      socket.on('message-hello', (data) => {
        // 유저는 서버메세지 받으면 html에 넣기
        document
          .querySelector('.chat-screen')
          .insertAdjacentHTML(
            'beforeend',
            `<div class="chat-box"><span>${data}</span></div>`
          );
      });
    </script>
  </body>
</html>
